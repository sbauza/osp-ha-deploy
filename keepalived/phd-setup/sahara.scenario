# This file can be used directly by 'phd', see 'build-all.sh' in this
# directory for how it can be invoked.  The only requirement is a list
# of nodes you'd like it to modify.
#
# The scope of each command-block is controlled by the preceeding
# 'target' line. 
#
# - target=all
#   The commands are executed on evey node provided
#
# - target=local
#   The commands are executed from the node hosting phd. When not
#   using phd, they should be run from some other independant host
#   (such as the puppet master)
#
# - target=$PHD_ENV_nodes{N}
#   The commands are executed on the Nth node provided.
#   For example, to run on only the first node would be target=$PHD_ENV_nodes1
#
# Tasks to be performed at this step include:
# - Installing Sahara
# - Configuring Sahara
# - Starting services, opening firewall ports

#################################
# Scenario Requirements Section #
#################################
= VARIABLES =

PHD_VAR_network_nic_internal
PHD_VAR_network_nic_external
PHD_VAR_network_hosts_vip
PHD_VAR_network_ips_controllers
PHD_VAR_network_hosts_rabbitmq
PHD_VAR_network_hosts_memcache
PHD_VAR_network_neutron_externalgateway
PHD_VAR_network_neutron_externalnetwork
PHD_VAR_network_neutron_allocpoolstart
PHD_VAR_network_neutron_allocpoolend

#################################
# Scenario Requirements Section #
#################################
= REQUIREMENTS =
nodes: 1

######################
# Deployment Scripts #
######################
= SCRIPTS =

target=all
....
myip=$(ip a |grep ${PHD_VAR_network_nic_internal} | grep inet | awk '{print $2}' | awk -F/ '{print $1}' | head -n 1)

yum install -y openstack-sahara-api openstack-sahara-engine openstack-sahara-common openstack-sahara python-saharaclient

openstack-config --set /etc/sahara/sahara.conf DEFAULT host ${myip}
openstack-config --set /etc/sahara/sahara.conf DEFAULT use_floating_ips True
openstack-config --set /etc/sahara/sahara.conf DEFAULT use_neutron True
openstack-config --set /etc/sahara/sahara.conf DEFAULT rpc_backend rabbit
openstack-config --set /etc/sahara/sahara.conf oslo_messaging_rabbit rabbit_hosts ${PHD_VAR_network_hosts_rabbitmq}
openstack-config --set /etc/sahara/sahara.conf oslo_messaging_rabbit rabbit_port 5672
openstack-config --set /etc/sahara/sahara.conf oslo_messaging_rabbit rabbit_use_ssl False
openstack-config --set /etc/sahara/sahara.conf oslo_messaging_rabbit rabbit_userid guest
openstack-config --set /etc/sahara/sahara.conf oslo_messaging_rabbit rabbit_password guest
openstack-config --set /etc/sahara/sahara.conf oslo_messaging_rabbit rabbit_login_method AMQPLAIN
openstack-config --set /etc/sahara/sahara.conf oslo_messaging_rabbit rabbit_ha_queues true
openstack-config --set /etc/sahara/sahara.conf DEFAULT notification_topics notifications
openstack-config --set /etc/sahara/sahara.conf database connection mysql://sahara:saharatest@${PHD_VAR_network_hosts_vip}/sahara
openstack-config --set /etc/sahara/sahara.conf keystone_authtoken auth_uri http://${PHD_VAR_network_hosts_vip}:5000/v2.0
openstack-config --set /etc/sahara/sahara.conf keystone_authtoken identity_uri http://${PHD_VAR_network_hosts_vip}:35357/
openstack-config --set /etc/sahara/sahara.conf keystone_authtoken admin_user sahara
openstack-config --set /etc/sahara/sahara.conf keystone_authtoken admin_password saharatest
openstack-config --set /etc/sahara/sahara.conf keystone_authtoken admin_tenant_name services
openstack-config --set /etc/sahara/sahara.conf DEFAULT log_file /var/log/sahara/sahara.log
....

target=$PHD_ENV_nodes1
....
sahara-db-manage --config-file /etc/sahara/sahara.conf upgrade head
....

target=all
....
firewall-cmd --add-port=8386/tcp
firewall-cmd --add-port=8386/tcp --permanent
systemctl enable openstack-sahara-api
systemctl enable openstack-sahara-engine
systemctl start openstack-sahara-api
systemctl start openstack-sahara-engine
....

