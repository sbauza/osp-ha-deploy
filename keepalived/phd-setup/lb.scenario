# This file can be used directly by 'phd', see 'build-all.sh' in this
# directory for how it can be invoked.  The only requirement is a list
# of nodes you'd like it to modify.
#
# The scope of each command-block is controlled by the preceeding
# 'target' line. 
#
# - target=all
#   The commands are executed on evey node provided
#
# - target=local
#   The commands are executed from the node hosting phd. When not
#   using phd, they should be run from some other independant host
#   (such as the puppet master)
#
# - target=$PHD_ENV_nodes{N}
#   The commands are executed on the Nth node provided.
#   For example, to run on only the first node would be target=$PHD_ENV_nodes1
#
# Tasks to be performed at this step include:
# - Tweaking the IP stack to allow nonlocal binding
# - Configuring haproxy


#################################
# Scenario Requirements Section #
#################################
= VARIABLES =

PHD_VAR_network_ips_vip
PHD_VAR_network_ips_controllers
PHD_VAR_deployment
PHD_VAR_components
PHD_VAR_osp_major

#################################
# Scenario Requirements Section #
#################################
= REQUIREMENTS =
nodes: 1

######################
# Deployment Scripts #
######################
= SCRIPTS =

target=all
....
yum install -y haproxy openstack-selinux
echo net.ipv4.ip_nonlocal_bind=1 >> /etc/sysctl.d/haproxy.conf
echo 1 > /proc/sys/net/ipv4/ip_nonlocal_bind

IFS=', ' read -a controller_ips <<< "${PHD_VAR_network_ips_controllers}"

# HA Proxy defaults

cat > /etc/haproxy/haproxy.cfg << EOF
global
    daemon
    stats socket /var/lib/haproxy/stats
defaults
    mode tcp
    maxconn 10000
    timeout connect 5s
    timeout client 30s
    timeout server 30s

listen monitor
    bind ${PHD_VAR_network_ips_vip}:9300 
    mode http
    monitor-uri /status
    stats enable
    stats uri /admin
    stats realm Haproxy\ Statistics
    stats auth root:redhat
    stats refresh 5s

frontend vip-db
    bind ${PHD_VAR_network_ips_vip}:3306
    timeout client 90m
    default_backend db-vms-galera
backend db-vms-galera
    option httpchk
    stick-table type ip size 1000
    stick on dst
    timeout server 90m
    server rhos7-node1 ${controller_ips[0]}:3306 check inter 1s port 9200 backup on-marked-down shutdown-sessions
    server rhos7-node2 ${controller_ips[1]}:3306 check inter 1s port 9200 backup on-marked-down shutdown-sessions
    server rhos7-node3 ${controller_ips[2]}:3306 check inter 1s port 9200 backup on-marked-down shutdown-sessions

# Note the RabbitMQ entry is only needed for CloudForms compatibility
# and should be removed in the future
frontend vip-rabbitmq
    option clitcpka
    bind ${PHD_VAR_network_ips_vip}:5672
    timeout client 900m
    default_backend rabbitmq-vms
backend rabbitmq-vms
    option srvtcpka
    balance roundrobin
    timeout server 900m
    server rhos7-node1 ${controller_ips[0]}:5672 check inter 1s
    server rhos7-node2 ${controller_ips[1]}:5672 check inter 1s
    server rhos7-node3 ${controller_ips[2]}:5672 check inter 1s

frontend vip-keystone-admin
    bind ${PHD_VAR_network_ips_vip}:35357
    default_backend keystone-admin-vms
    timeout client 600s
backend keystone-admin-vms
    balance roundrobin
    timeout server 600s
    server rhos7-node1 ${controller_ips[0]}:35357 check inter 1s on-marked-down shutdown-sessions
    server rhos7-node2 ${controller_ips[1]}:35357 check inter 1s on-marked-down shutdown-sessions
    server rhos7-node3 ${controller_ips[2]}:35357 check inter 1s on-marked-down shutdown-sessions

frontend vip-keystone-public
    bind ${PHD_VAR_network_ips_vip}:5000
    default_backend keystone-public-vms
    timeout client 600s
backend keystone-public-vms
    balance roundrobin
    timeout server 600s
    server rhos7-node1 ${controller_ips[0]}:5000 check inter 1s on-marked-down shutdown-sessions
    server rhos7-node2 ${controller_ips[1]}:5000 check inter 1s on-marked-down shutdown-sessions
    server rhos7-node3 ${controller_ips[2]}:5000 check inter 1s on-marked-down shutdown-sessions

frontend vip-glance-api
    bind ${PHD_VAR_network_ips_vip}:9191
    default_backend glance-api-vms
backend glance-api-vms
    balance roundrobin
    server rhos7-node1 ${controller_ips[0]}:9191 check inter 1s
    server rhos7-node2 ${controller_ips[1]}:9191 check inter 1s
    server rhos7-node3 ${controller_ips[2]}:9191 check inter 1s

frontend vip-glance-registry
    bind ${PHD_VAR_network_ips_vip}:9292
    default_backend glance-registry-vms
backend glance-registry-vms
    balance roundrobin
    server rhos7-node1 ${controller_ips[0]}:9292 check inter 1s
    server rhos7-node2 ${controller_ips[1]}:9292 check inter 1s
    server rhos7-node3 ${controller_ips[2]}:9292 check inter 1s

frontend vip-cinder
    bind ${PHD_VAR_network_ips_vip}:8776
    default_backend cinder-vms
backend cinder-vms
    balance roundrobin
    server rhos7-node1 ${controller_ips[0]}:8776 check inter 1s
    server rhos7-node2 ${controller_ips[1]}:8776 check inter 1s
    server rhos7-node3 ${controller_ips[2]}:8776 check inter 1s

frontend vip-swift
    bind ${PHD_VAR_network_ips_vip}:8080
    default_backend swift-vms
backend swift-vms
    balance roundrobin
    server rhos7-node1 ${controller_ips[0]}:8080 check inter 1s
    server rhos7-node2 ${controller_ips[1]}:8080 check inter 1s
    server rhos7-node3 ${controller_ips[2]}:8080 check inter 1s

frontend vip-neutron
    bind ${PHD_VAR_network_ips_vip}:9696
    default_backend neutron-vms
backend neutron-vms
    balance roundrobin
    server rhos7-node1 ${controller_ips[0]}:9696 check inter 1s
    server rhos7-node2 ${controller_ips[1]}:9696 check inter 1s
    server rhos7-node3 ${controller_ips[2]}:9696 check inter 1s

frontend vip-nova-vnc-novncproxy
    bind ${PHD_VAR_network_ips_vip}:6080
    default_backend nova-vnc-novncproxy-vms
backend nova-vnc-novncproxy-vms
    balance roundrobin
    server rhos7-node1 ${controller_ips[0]}:6080 check inter 1s
    server rhos7-node2 ${controller_ips[1]}:6080 check inter 1s
    server rhos7-node3 ${controller_ips[2]}:6080 check inter 1s

frontend nova-metadata-vms
    bind ${PHD_VAR_network_ips_vip}:8775
    default_backend nova-metadata-vms
backend nova-metadata-vms
    balance roundrobin
    server rhos7-node1 ${controller_ips[0]}:8775 check inter 1s
    server rhos7-node2 ${controller_ips[1]}:8775 check inter 1s
    server rhos7-node3 ${controller_ips[2]}:8775 check inter 1s

frontend vip-nova-api
    bind ${PHD_VAR_network_ips_vip}:8774
    default_backend nova-api-vms
backend nova-api-vms
    balance roundrobin
    server rhos7-node1 ${controller_ips[0]}:8774 check inter 1s
    server rhos7-node2 ${controller_ips[1]}:8774 check inter 1s
    server rhos7-node3 ${controller_ips[2]}:8774 check inter 1s

frontend vip-horizon
    bind ${PHD_VAR_network_ips_vip}:80
    timeout client 180s
    default_backend horizon-vms
backend horizon-vms
    balance roundrobin
    timeout server 180s
    mode http
    cookie SERVERID insert indirect nocache
    server rhos7-node1 ${controller_ips[0]}:80 check inter 1s cookie rhos7-horizon1 on-marked-down shutdown-sessions
    server rhos7-node2 ${controller_ips[1]}:80 check inter 1s cookie rhos7-horizon2 on-marked-down shutdown-sessions
    server rhos7-node3 ${controller_ips[2]}:80 check inter 1s cookie rhos7-horizon3 on-marked-down shutdown-sessions

frontend vip-heat-cfn
    bind ${PHD_VAR_network_ips_vip}:8000
    default_backend heat-cfn-vms
backend heat-cfn-vms
    balance roundrobin
    server rhos7-node1 ${controller_ips[0]}:8000 check inter 1s
    server rhos7-node2 ${controller_ips[1]}:8000 check inter 1s
    server rhos7-node3 ${controller_ips[2]}:8000 check inter 1s

frontend vip-heat-cloudw
    bind ${PHD_VAR_network_ips_vip}:8003
    default_backend heat-cloudw-vms
backend heat-cloudw-vms
    balance roundrobin
    server rhos7-node1 ${controller_ips[0]}:8003 check inter 1s
    server rhos7-node2 ${controller_ips[1]}:8003 check inter 1s
    server rhos7-node3 ${controller_ips[2]}:8003 check inter 1s

frontend vip-heat-srv
    bind ${PHD_VAR_network_ips_vip}:8004
    default_backend heat-srv-vms
backend heat-srv-vms
    balance roundrobin
    server rhos7-node1 ${controller_ips[0]}:8004 check inter 1s
    server rhos7-node2 ${controller_ips[1]}:8004 check inter 1s
    server rhos7-node3 ${controller_ips[2]}:8004 check inter 1s

frontend vip-ceilometer
    bind ${PHD_VAR_network_ips_vip}:8777
    timeout client 90s
    default_backend ceilometer-vms
backend ceilometer-vms
    balance roundrobin
    timeout server 90s
    server rhos7-node1 ${controller_ips[0]}:8777 check inter 1s
    server rhos7-node2 ${controller_ips[1]}:8777 check inter 1s
    server rhos7-node3 ${controller_ips[2]}:8777 check inter 1s

frontend vip-sahara
    bind ${PHD_VAR_network_ips_vip}:8386
    default_backend sahara-vms
backend sahara-vms
    balance roundrobin
    server rhos7-node1 ${controller_ips[0]}:8386 check inter 1s
    server rhos7-node2 ${controller_ips[1]}:8386 check inter 1s
    server rhos7-node3 ${controller_ips[2]}:8386 check inter 1s

frontend vip-trove
    bind ${PHD_VAR_network_ips_vip}:8779
    default_backend trove-vms
backend trove-vms
    balance roundrobin
    server rhos7-node1 ${controller_ips[0]}:8779 check inter 1s
    server rhos7-node2 ${controller_ips[1]}:8779 check inter 1s
    server rhos7-node3 ${controller_ips[2]}:8779 check inter 1s
EOF
....
