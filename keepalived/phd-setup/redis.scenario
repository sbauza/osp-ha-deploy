# This file can be used directly by 'phd', see 'build-all.sh' in this
# directory for how it can be invoked.  The only requirement is a list
# of nodes you'd like it to modify.
#
# The scope of each command-block is controlled by the preceeding
# 'target' line. 
#
# - target=all
#   The commands are executed on evey node provided
#
# - target=local
#   The commands are executed from the node hosting phd. When not
#   using phd, they should be run from some other independant host
#   (such as the puppet master)
#
# - target=$PHD_ENV_nodes{N}
#   The commands are executed on the Nth node provided.
#   For example, to run on only the first node would be target=$PHD_ENV_nodes1
#
# Tasks to be performed at this step include:
# - Installing Redis
# - Setting up Redis, including a master and two slaves
# - Setting up Sentinel for HA
# - Starting services, opening firewall ports

#################################
# Scenario Requirements Section #
#################################
= VARIABLES =

PHD_VAR_network_nic_internal
PHD_VAR_network_ips_controllers
PHD_VAR_network_hosts_rabbitmq

#################################
# Scenario Requirements Section #
#################################
= REQUIREMENTS =
nodes: 1

######################
# Deployment Scripts #
######################
= SCRIPTS =

target=all
....
yum install -y redis
....

target=$PHD_ENV_nodes1
....
IFS=', ' read -a controller_ips <<< "${PHD_VAR_network_ips_controllers}"

sed --in-place "s/bind 127.0.0.1/bind 127.0.0.1 ${controller_ips[0]}/" /etc/redis.conf
....

target=$PHD_ENV_nodes2
....

IFS=', ' read -a controller_ips <<< "${PHD_VAR_network_ips_controllers}"

sed --in-place "s/bind 127.0.0.1/bind 127.0.0.1 ${controller_ips[1]}/" /etc/redis.conf
echo slaveof ''${controller_ips[0]}'' 6379 >> /etc/redis.conf 
....

target=$PHD_ENV_nodes3
....

IFS=', ' read -a controller_ips <<< "${PHD_VAR_network_ips_controllers}"

sed --in-place "s/bind 127.0.0.1/bind 127.0.0.1 ${controller_ips[2]}/" /etc/redis.conf
echo slaveof ''${controller_ips[0]}'' 6379 >> /etc/redis.conf 
....

target=all
....
IFS=', ' read -a controller_ips <<< "${PHD_VAR_network_ips_controllers}"

cat > /etc/redis-sentinel.conf << EOF

sentinel monitor mymaster ${controller_ips[0]} 6379 2
sentinel down-after-milliseconds mymaster 30000
sentinel failover-timeout mymaster 180000
sentinel parallel-syncs mymaster 1
min-slaves-to-write 1
min-slaves-max-lag 10
logfile /var/log/redis/sentinel.log
EOF

firewall-cmd --add-port=6379/tcp
firewall-cmd --add-port=6379/tcp --permanent
firewall-cmd --add-port=26379/tcp
firewall-cmd --add-port=26379/tcp --permanent
systemctl enable redis
systemctl start redis
systemctl enable redis-sentinel
systemctl start redis-sentinel

....

